user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging Configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    log_format cms_detailed '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           'rt=$request_time uct="$upstream_connect_time" '
                           'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log cms_detailed;

    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Buffer Settings
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/x-component
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=admin:10m rate=5r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Upstream Backend Services
    upstream cms_api {
        server cms-api:5000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream admin_api {
        server admin-api:5001 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream orchestrator {
        server orchestrator:5002 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream frontend {
        server frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream admin_panel {
        server admin-panel:3001 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream file_server {
        server file-server:80 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    upstream ai_assistant {
        server ai-writing-assistant:5002 max_fails=3 fail_timeout=30s;
        keepalive 16;
    }

    # Main Frontend Application
    server {
        listen 80;
        server_name localhost;
        
        # Security
        limit_conn conn_limit_per_ip 20;
        
        # Root location - Frontend App
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Proxy timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                proxy_pass http://frontend;
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header X-Cache-Status "STATIC";
            }
        }

        # Content API
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://cms_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API specific settings
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # CORS headers for API
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
        }

        # AI Writing Assistant API
        location /ai-assistant/ {
            limit_req zone=api burst=15 nodelay;
            
            proxy_pass http://ai_assistant/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # AI API specific settings
            proxy_connect_timeout 10s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            # CORS headers for AI API
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;
            
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
        }

        # Experience Orchestrator API
        location /experience/ {
            limit_req zone=api burst=10 nodelay;
            
            proxy_pass http://orchestrator/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # File uploads and assets
        location /uploads/ {
            proxy_pass http://file_server/uploads/;
            
            # Cache uploaded files
            expires 30d;
            add_header Cache-Control "public, no-transform";
            add_header X-Cache-Status "UPLOAD";
            
            # Security for uploaded files
            add_header X-Content-Type-Options nosniff;
            
            # Prevent execution of uploaded files
            location ~* \.(php|pl|py|jsp|asp|sh|cgi)$ {
                return 403;
            }
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Admin Panel
    server {
        listen 80;
        server_name admin.localhost;
        
        # Admin security
        limit_conn conn_limit_per_ip 10;
        
        # Admin Panel Frontend
        location / {
            proxy_pass http://admin_panel;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Enhanced security for admin
            add_header X-Frame-Options "DENY" always;
            add_header X-Robots-Tag "noindex, nofollow" always;
        }

        # Admin API
        location /api/ {
            limit_req zone=admin burst=10 nodelay;
            
            proxy_pass http://admin_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Admin API timeout settings
            proxy_connect_timeout 10s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            # Security headers for admin API
            add_header X-Frame-Options "DENY" always;
            add_header X-Robots-Tag "noindex, nofollow" always;
        }
    }

    # Redirect non-www to www (optional)
    # server {
    #     listen 80;
    #     server_name www.localhost;
    #     return 301 http://localhost$request_uri;
    # }

    # Default server (catch-all)
    server {
        listen 80 default_server;
        server_name _;
        return 444;  # Close connection without response
    }
}